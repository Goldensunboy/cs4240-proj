
type ArrayInt = array [100] of int;

type Int = int;
type Array2DInt = array [100][100] of int;
type FixedPt = fixedpt;
type ArrayFixedPt = array [100] of fixedpt;
type Array2DFixedPt = array [100][100] of fixedpt;
int function testFunc(x:int) 
begin
	begin
		var a, b : int :=0;
		return b;
	end;
end;

int function testFunc2(x:ArrayInt) 
begin
	begin
		var a, b : int :=0;
		return b;
	end;
end;
 

/* Can assign values normally */
void function funcName1a() 
begin
	begin
		var x : ArrayInt := 9;
		var y : int :=0;
		y := y + 1;
	end;
end;


void function funcName3() 
begin
	begin
		var x : ArrayInt := 10;
		x[2] := 12;
	end;
end;/*
void function funcName4() 
begin
	begin
		var x : ArrayInt;
		x := 10;
		x[0] := 9;
	end;
end;
*/

void function funcName2a() 
begin
	begin
		var y : int := 1;
		var x : ArrayInt := 10;
		y := x[0];
	end;
end;


void function funcName2b() 
begin
	begin
		var y : int := 16;
		var x : ArrayInt := 10;
		x[0] := y;
	end;
end;

/* Should be able to pass individual elements of an array as a parameter of a function */ 
void function funcName5() 
begin
	begin
		var x : ArrayInt;
		testFunc(x[0]);
	end;
end; 


/* Should be able to pass an array as a parameter of a function */
void function funcName6() 
begin
	begin
		var x : ArrayInt := 9;
		var y : int :=10;
		testFunc2(x);
	end;
end;



/* Should be able to pass an array as a parameter of a function */
void function funcName6a() 
begin
	begin
		var x : ArrayInt := 9;
		x[0] :=testFunc2(x);
	end;
end;

fixedpt function testFuncf(x:fixedpt) 
begin
	begin
		var a, b : fixedpt :=0.0;
		return b;
	end;
end;

fixedpt function testFunc2f(x:ArrayFixedPt) 
begin
	begin
		var a, b : fixedpt :=0.0;
		return b;
	end;
end;

/* Can assign values normally */
void function funcName1af() 
begin
	begin
		var x : ArrayFixedPt := 9.0;
		var y : fixedpt :=0.0;
		y := y + 1;
	end;
end;


void function funcName3f() 
begin
	begin
		var x : ArrayFixedPt := 10.0;
		x[2] := 12.0;
	end;
end;
 
void function funcName4f() 
begin
	begin
		var x : ArrayFixedPt;
		x := 10.0;
		x[0] := 9.0;
	end;
end;



void function funcName2af() 
begin
	begin
		var y : fixedpt := 1.0;
		var x : ArrayFixedPt := 10.0;
		y := x[0];
	end;
end;


void function funcName2bf() 
begin
	begin
		var y : fixedpt := 16.0;
		var x : ArrayFixedPt := 10.0;
		x[0] := y;
	end;
end;

/* Should be able to pass individual elements of an array as a parameter of a function */ 
void function funcName5f() 
begin
	begin
		var x : ArrayFixedPt :=0;
		testFuncf(x[0]);
	end;
end; 

/* Should be able to pass an array as a parameter of a function */
void function funcName6f() 
begin
	begin
		var x : ArrayFixedPt;
		testFunc2f(x);
	end;
end;


int function funcName10() 
begin
	begin
		var x : ArrayInt := 6;
		return x[9];
	end;
end;

fixedpt function funcName11() 
begin
	begin
		var x : ArrayFixedPt := 6.0;
		return x[9];
	end;
end;

void function funcName12() 
begin
	begin
		var y : int := 1;
		var x : ArrayInt := 10;
		y := x[y];
	end;
end;

void function funcName13() 
begin
	begin
		var x : ArrayInt := 10;
		var y : int := 7;
		x[2] := 12*y+3/y;
	end;
end;

void function funcName14() 
begin
	begin
		var x : ArrayInt := 10;
		var y : int := 7;
		x[2] := testFunc(3);
	end;
end;





void main()
begin
	begin
		var x : int := 10;
		x := 2;
	end;
end;


