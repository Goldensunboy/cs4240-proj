
type ArrayInt = array [100] of int;
type ArrayFixedPt = array [100] of fixedpt;

/* Used in testing */
int function testFunc()
begin
	begin
		var a, b : int :=0;
		return a;
	end;
end; 
int function testFunc2(x:int) 
begin
	begin
		var a, b : int :=0;
		return a;
	end;
end; 

/* TODO: (wrong error message) if condition statement does not contain a boolean value */ /*
void function func1a()
begin
	begin
		var a, b : int :=0;
		if 5 then
			a := 1;
		endif;
	end;
end; */

/* TODO: (wrong error message) while condition statement does not contain a boolean value */ /*
void function func1b()
begin
	begin
		var a, b : int :=0;
		while 4.0 do
			a := a + 1;
			return 6;
		enddo;
	end;
end; */

/* TODO: (wrong error message) if then else condition statement does not contain a boolean value */ /*
void function func2()
begin
	begin
		var a, b : int :=0;
		if 6.0 then
			a := 1;
		else
			b := 1;
		endif;
	end;
end; */

/* if condition statement does not contain (int & int) */ /*
void function func3()
begin
	begin
		var a, b : int :=0;
		if 5 & 6 then
			a := 1;
		endif;
	end;
end; */

/* if condition statement does not contain (boolean & int) */ /*
void function func4()
begin
	begin
		var a, b : int :=0;
		if b < a  & a + b then
			a := 1;
		endif;
	end;
end; */

/* TODO: (wrong error message) while condition statement does not contains (fixedpt | int) */  /*
int function func5()
begin
	begin
		var a, b : int :=0;
		while 4.9 | b do
			a := a + 1;
			return 6;
		enddo;
	end;
end; */

/* if condition statement cannot contain a function call */ /*
void function func6()
begin
	begin
		var a, b : int :=0;
		if 5 < testFunc() then
			a := 1;
		endif;
	end;
end;*/

/* A variable cannot be assigned a conditional value */ /*
void function func7()
begin
	begin
		var a, b : int :=0;
		a := 6 < 7;
	end;
end; */

/* A variable cannot be assigned a conditional value using a function's return value */ /*
void function func8()
begin
	begin
		var a, b : int :=0;
		a := 6 < testFunc();
	end;
end; */

/* An array index cannot contain a conditional statement */ /*
void function func9()
begin
	begin
		var X: array [100] of int := 10;
		var i: int := 0;
		i := X[8 > 9];
	end;
end; */

/* Cannot pass a conditional into a function call */ /*
void function func10()
begin
	begin
		var i: int := 0;
		i := testFunc2(6 <= 9);
	end;
end; */

/* Cannot pass a conditional into a function call whose return value is not assigned to a variable */ /*
void function func11()
begin
	begin
		var i: int := 0;
		testFunc2(6 <= 9);
	end;
end; */

/* Cannot return a conditional */ /*
int function func12()
begin
	begin
		var i: int := 0;
		return 6 <= 9;
	end;
end; */

/* Cannot pass a conditional into a function call whose return value is not assigned to a variable */ /*
void function func13()
begin
	begin
		var i: int := 0;
		testFunc2((6 <= 9) * 10);
	end;
end; */

/* TODO: Cannot perform a comparison of two arrays */
void function func14() 
begin
	begin
		var x,y : ArrayInt := 9;
		if x < y then
			x[9] := 0;
		endif;
	end;
end;

/* TODO: Cannot perform a comparison of an array and an int */
void function func15() 
begin
	begin
		var x,y : ArrayInt := 9;
		if x < 5 then
			x[9] := 0;
		endif;
	end;
end;

/* TODO: Cannot perform a comparison of an fixedpt variable and an int literal */
void function func16() 
begin
	begin
		var x : int := 9;
		var y : fixedpt := 9;
		if y < 5 then
			x[9] := 0;
		endif;
	end;
end;

/* TODO: Cannot perform a comparison of an int variable and an fixedpt literal */
void function func17() 
begin
	begin
		var x : int := 9;
		var y : fixedpt := 9;
		if x < 5.0 then
			x[9] := 0;
		endif;
	end;
end;

/* LEGAL??????: Cannot perform a comparison of an array and an int */
void function func18() 
begin
	begin
		var x : ArrayInt := 9;
		var y : ArrayFixedPt := 9;
		if x[6] < y[9] then
			x[9] := 0;
		endif;
	end;
end;

void main()
begin
	begin
		var x : int := 10;
		x := 2;
	end;
end;