
type ArrayInt = array [100] of int;

/* Used in testing */
void function testFunc()
begin
	begin
		var a, b : int :=0;
		a := 9;
	end;
end; 
int function testFunc2() 
begin
	begin
		var a, b : int :=0;
		return a;
	end;
end; 
fixedpt function testFunc3() 
begin
	begin
		var a : fixedpt := 5.0;
		return a;
	end;
end; 
void function testFunc4(x:int, y:fixedpt) 
begin
	begin
		var x, b : int :=0;
		x := 8;
	end;
end;
int function testFunc5(x:ArrayInt) 
begin
	begin
		var a, b : int :=0;
		return a;
	end;
end; 
int function testFunc6(x:int, y:fixedpt) 
begin
	begin
		var x, b : int :=0;
		return 8;
	end;
end;
int function testFunc7(x:int) 
begin
	begin
		var x, b : int :=0;
		return 8;
	end;
end;

/*  Errors when it shouldn't, int = int */ 
void function func1()
begin
	begin
		var x : int :=0;
		x := testFunc2();
	end;
end; 

/*   Errors when it shouldn't, fixedpt = fixedpt */ 
void function func2()
begin
	begin
		var x : fixedpt :=0;
		x := testFunc3();
	end;
end; 

/*  Legal, I think. */ 
void function func3()
begin
	begin
		var x : fixedpt :=0;
		x := testFunc2();
	end;
end; 


void function func4()
begin
	begin
		var x : int :=0;
		x := testFunc6(5, 7.8);
	end;
end; 

void function func5()
begin
	begin
		var x : int :=0;
		x := testFunc7(5);
	end;
end; 


void function func6()
begin
	begin
		var x : ArrayInt :=0;
		x[0] := testFunc7(8);
	end;
end; 



void main()
begin
	begin
		var x : int := 10;
		x := 2;
	end;
end;