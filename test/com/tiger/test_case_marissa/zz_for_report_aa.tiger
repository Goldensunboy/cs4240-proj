
type Int = int;
type Int_Type = int;
type Int_Type2 = int;
type ArrayInt = array [100] of int;
type Array2DInt = array [100][100] of int;
type FixedPtLit = fixedpt;
type Fixedpt_Type = fixedpt;
type Fixedpt_Type2 = fixedpt;
type ArrayFixedPt = array [100] of fixedpt;
type Array2DFixedPt = array [100][100] of fixedpt;


/* Used in testing */
int function funcTest1(x:int) 
begin
     begin
          var a: int :=0;
          return a;
     end;
end;
 
fixedpt function funcTest2(x:fixedpt) 
begin
     begin
          var a: fixedpt :=0;
          return a;
     end;
end;
 
Int_Type function funcTest3(x:Int_Type) 
begin
     begin
          var a: Int_Type := 0;
          return a;
     end;
end;
 
Fixedpt_Type function funcTest4(x:Fixedpt_Type) 
begin
     begin
          var a: Fixedpt_Type := 0.0;
          return a;
     end;
end;



void function func9() 
begin
	begin
		var int_var : int := 5;
		var fixedpt_var : fixedpt := 5.0;
		var int_type_var : Int_Type := 5;
		var fixedpt_type_var : Fixedpt_Type := 5.0;
		var int_type2_var : Int_Type2 := 5;
		var fixedpt_type2_var : Fixedpt_Type2 := 5.0;
		
		int_var := fixedpt_var + int_var;
		int_type_var := 5;                    
		fixedpt_type_var := 5.0;                                                 
		fixedpt_type_var := fixedpt_var * 5 + fixedpt_type_var; 
		fixedpt_type_var := fixedpt_var * int_var + fixedpt_type_var; 
		int_type_var := int_type2_var + 2;
		fixedpt_type_var := fixedpt_type2_var * (fixedpt_type_var + fixedpt_type2_var);
	end;
end;


void function func10()
begin
	begin
		var int_var : int := 5;
		var fixedpt_var : fixedpt := 5.0;
		var int_type_var : Int_Type := 5;
		var fixedpt_var2 : fixedpt := 5.0;
		var int_var2 : Int_Type := 5;
		var fixedpt_type_var : Fixedpt_Type := 5.0;
		var int_type_var2 : Int_Type := 5;
		var fixedpt_type_var2 : Fixedpt_Type := 5.0;
		var int_type2_var : Int_Type2 := 5;
		var fixedpt_type2_var : Fixedpt_Type2 := 5.0;
		
		if int_type_var < 5 then
			int_var := 0;
		endif;
		
		if int_type_var < 5.0 then
			int_var := 0;
		endif;
		
		if fixedpt_type_var < 5 then
			fixedpt_var := 0;
		endif;
		
		if int_var < fixedpt_type_var then
			fixedpt_var := 0;
		endif;
		
		if fixedpt_var < int_type_var then
			fixedpt_var := 0.0;
		endif;
		
		if int_type_var < fixedpt_type_var then
			fixedpt_var := 0.0;
		endif;
		
		if fixedpt_type_var < int_type_var then
			fixedpt_var := 0.0;
		endif;
		
		if fixedpt_var < fixedpt_type_var + 5 then
			int_var := 0;
		endif;
		
		if int_var < int_type_var + 5.0 then
			int_var := 0;
		endif;
		
		if int_var + 5.0 < int_type_var then
			fixedpt_var := 0.0;
		endif;
		
		if int_var + 5 < int_type_var  then
			fixedpt_var := 0.0;
		endif;
		
		if fixedpt_var < fixedpt_type_var + 5.0  then
			int_type_var := int_type_var;
		endif;
		
		if fixedpt_type_var < 5.0  then
			fixedpt_type_var := fixedpt_type_var;
		endif;
		
		if int_var < int_type_var then
			fixedpt_var := 0.0;
		endif;
		
		if fixedpt_var < fixedpt_type_var then
			fixedpt_var := 0.0;
		endif;
		
		if int_var < int_type_var + 5   then
			fixedpt_var := 0.0;
		endif;
		
		if fixedpt_var + 5.0 < fixedpt_type_var  then
			int_var := 0;
		endif;
		
		if fixedpt_var + 5 < fixedpt_type_var then
			int_var := 0;
		endif;
		
		if int_var + 5.0 < fixedpt_type_var  then
			fixedpt_var := 0.0;
		endif;
		
		if int_type_var < int_var + int_type_var  then
			fixedpt_var := 0.0;
		endif;
		
		if fixedpt_type_var < fixedpt_var + fixedpt_type_var   then
			int_type_var := int_type_var;
		endif;
		
		
		
		if int_type_var < int_type2_var then
			int_var := 0;
		endif;
		
		if int_type_var < int_type_var + int_type2_var then
			int_var := 0;
		endif;
		
		if int_type_var > (int_var * int_type_var) + int_type2_var then
			int_var := 0;
		endif;
		
		if int_type_var < 5 * int_type2_var then
			int_var := 0;
		endif;
		
		if int_type_var <> (int_type_var + 5) * int_type2_var then
			int_var := 0;
		endif;
		
		if int_type2_var < int_type_var then
			int_var := 0;
		endif;
		
		if int_type2_var < int_type2_var + int_type_var then
			int_var := 0;
		endif;
		
		
		
		if fixed_type_var < fixedpt_type2_var then
			int_var := 0;
		endif;
		
		if fixed_type_var < fixed_type_var + fixedpt_type2_var then
			int_var := 0;
		endif;
		
		if fixed_type_var > (fixedpt_var * fixed_type_var) + fixedpt_type2_var then
			int_var := 0;
		endif;
		
		if fixed_type_var < 5 * fixedpt_type2_var then
			int_var := 0;
		endif;
		
		if fixed_type_var <> (fixed_type_var + 5) * fixedpt_type2_var then
			int_var := 0;
		endif;
		
		if fixedpt_type2_var < fixed_type_var then
			int_var := 0;
		endif;
		
		if fixedpt_type2_var < fixedpt_type2_var + fixed_type_var then
			int_var := 0;
		endif;
		
		
		
		while int_type_var < 5 do
			int_var := 0;
		enddo;
		
		while int_type_var < 5.0 do
			int_var := 0;
		enddo;
		
		while fixedpt_type_var < 5 do
			fixedpt_var := 0;
		enddo;
		
		while int_var < fixedpt_type_var do
			fixedpt_var := 0;
		enddo;
		
		while fixedpt_var < int_type_var do
			fixedpt_var := 0.0;
		enddo;
		
		while int_type_var < fixedpt_type_var do
			fixedpt_var := 0.0;
		enddo;
		
		while fixedpt_type_var < int_type_var do
			fixedpt_var := 0.0;
		enddo;
		
		while fixedpt_var < fixedpt_type_var + 5 do
			int_var := 0;
		enddo;
		
		while int_var < int_type_var + 5.0 do
			int_var := 0;
		enddo;
		
		while int_var + 5.0 < int_type_var do
			fixedpt_var := 0.0;
		enddo;
		
		while int_var + 5 < int_type_var  do
			fixedpt_var := 0.0;
		enddo;
		
		while fixedpt_var < fixedpt_type_var + 5.0  do
			int_type_var := int_type_var;
		enddo;
		
		while fixedpt_type_var < 5.0  do
			fixedpt_type_var := fixedpt_type_var;
		enddo;
		
		while int_var < int_type_var do
			fixedpt_var := 0.0;
		enddo;
		
		while fixedpt_var < fixedpt_type_var do
			fixedpt_var := 0.0;
		enddo;
		
		while int_var < int_type_var + 5   do
			fixedpt_var := 0.0;
		enddo;
		
		while fixedpt_var + 5.0 < fixedpt_type_var  do
			int_var := 0;
		enddo;
		
		while fixedpt_var + 5 < fixedpt_type_var do
			int_var := 0;
		enddo;
		
		while int_var + 5.0 < fixedpt_type_var  do
			fixedpt_var := 0.0;
		enddo;
		
		while int_type_var < int_var + int_type_var  do
			fixedpt_var := 0.0;
		enddo;
		
		while fixedpt_type_var < fixedpt_var + fixedpt_type_var  do
			int_type_var := int_type_var;
		enddo;
		
		
		
		while int_type_var < int_type2_var do
			int_var := 0;
		enddo;
		
		while int_type_var < int_type_var + int_type2_var do
			int_var := 0;
		enddo;
		
		while int_type_var > (int_var * int_type_var) + int_type2_var do
			int_var := 0;
		enddo;
		
		while int_type_var < 5 * int_type2_var do
			int_var := 0;
		enddo;
		
		while int_type_var <> (int_type_var + 5) * int_type2_var do
			int_var := 0;
		enddo;
		
		while int_type2_var < int_type_var do
			int_var := 0;
		enddo;
		
		while int_type2_var < int_type2_var + int_type_var do
			int_var := 0;
		enddo;
		
		while fixed_type_var < fixedpt_type2_var do
			int_var := 0;
		enddo;
		
		while fixed_type_var < fixed_type_var + fixedpt_type2_var do
			int_var := 0;
		enddo;
		
		while fixed_type_var > (fixedpt_var * fixed_type_var) + fixedpt_type2_var do
			int_var := 0;
		enddo;
		
		while fixed_type_var < 5 * fixedpt_type2_var do
			int_var := 0;
		enddo;
		
		while fixed_type_var <> (fixed_type_var + 5) * fixedpt_type2_var do
			int_var := 0;
		enddo;
		
		while fixedpt_type2_var < fixed_type_var do
			int_var := 0;
		enddo;
		
		while fixedpt_type2_var < fixedpt_type2_var + fixed_type_var do
			int_var := 0;
		enddo;
				
	end;
end;