int function func2(v : int, w : fixedpt)
begin
	begin
		var n : int := 5;
		n := 8 - 3;
		return 7;
	end;
end;

int function func()
begin
	begin
		var n : int := 5;
		n := 8 - 3;
		return 8;
	end;
	begin
		var u : int := 0;
		return u;
	end;
end;

fixedpt function func5()
begin
	begin
		var t : fixedpt := 7.5;
		return 8.0;
	end;
end;

void function func3()
begin
	begin
		var u : int := 90;
		u := u * 8;
	end;
end;

void main()
begin
	begin
		var x : int := 10;
		var y : fixedpt := 98.45;
		func();
		x := func2(5, 6.9);
		x := func();
		func3();
		x := 2 * 3 + 5;
		if x < 9 then
			x := 9;
			/* break; */
			x := 90 - 5;
		endif;
		x := 0;
		while y - 3 <> 0 do
			while y = 0 do
				begin
					if x = 10 then
						x := 9;
				    else
				    	y := 7.8 - 5;
					endif;
					y := y - 0.01;
					break;
				end;
			enddo;
			break;
		enddo;
		y := 9.5;
	end;
end;