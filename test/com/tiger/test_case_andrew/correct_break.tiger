

int function testFunc(x:int) 
begin
	begin
		var a, b : int :=0;
		return a;
	end;
end; 


void function func1() 
begin
	begin
		var a, b : int :=0;
		for i := 1 to 50 do
			if a = b then
				break;
			endif;
		enddo;
	end;
end; 

/* Be able to use break in a for loop */ 
void function func2()
begin
	begin
		var a, b : int :=0;
		for i := 1 to 50 do
			break;
		enddo;

	end;
end; 

/* Be able to use break in a for loop */ 
void function func3()
begin
	begin
		var a, b : int :=0;
		for i := 1 to 50 do
			break;
			if a = b then
				a:=0;
			endif;
		enddo;

	end;
end; 

/* Be able to use break in a for loop */ 
void function func4()
begin
	begin
		var a, b : int :=0;
		for i := 1 to 50 do
			if a = b then
				a:=0;
			endif;
			break;
		enddo;

	end;
end; 

void function func5()
begin
	begin
		var a, b : int :=0;
		while a <> b do
			if a = b then
				break;
			endif;
		enddo;
	end;
end;

/* Be able to use break in a while loop */ 
void function func6() 
begin
	begin
		var a, b : int :=0;
		while a <> b do
			break;
			if a = b then
				a := 0;
			endif;
		enddo;
	end;
end; 

/* Be able to use break in a while loop */ 
void function func7()
begin
	begin
		var a, b : int :=0;
		while a <> b do
			break;
			if a = b then
				a := 0;
			endif;
		enddo;
	end;
end; 

/* Be able to use break in a while loop */ 
void function func8()
begin
	begin
		var a, b : int :=0;
		while a <> b do
			if a = b then
				a := 0;
			endif;
			break;
		enddo;
	end;
end; 

/* Be able to use break in a while loop */ 
void function func9()
begin
	begin
		var a, b : int :=0;
		while a <> b do
			break;
		enddo;
	end;
end; 

/* Be able to use break in a double nested while loop */ 
void function func10()
begin
	begin
		var a, b : int :=0;
		while a <> b do
			while a <> b do
				break;
			enddo;
		enddo;
	end;
end; 

/* Be able to use break in a double nested while loop */ 
void function func11()
begin
	begin
		var a, b : int :=0;
		while a <> b do
			while a <> b do
				if a = b then
					break;
				endif;
			enddo;
		enddo;
	end;
end; 

/* Be able to use break in a double nested while loop */ 
void function func12()
begin
	begin
		var a, b : int :=0;
		while a <> b do
			while a <> b do
				if a = b then
					break;
				else
					b := 1;
				endif;
			enddo;
		enddo;
	end;
end; 

/* Be able to use break in a double nested while loop */ 
void function func13()
begin
	begin
		var a, b : int :=0;
		while a <> b do
			while a <> b do
				if a = b then
					b := 1;
				else
					break;
				endif;
			enddo;
		enddo;
	end;
end; 

/* Be able to use break in a double nested while loop */ 
void function func14()
begin
	begin
		var a, b : int :=0;
		while a <> b do
			while a <> b do
				if a = b then
					b := 1;
				else
					if a = b then
						b := 1;
					else
						break;
					endif;
				endif;
			enddo;
		enddo;
	end;
end; 

/* Be able to use break in a for loop */ 
void function func15()
begin
	begin
		var a, b : int :=0;
		for i := 1 to 50 do
			for i := 1 to 50 do
				if a = b then
					break;
				endif;
			enddo;
		enddo;

	end;
end; 

/* Be able to use break in a double nested while loop */ 
void function func16()
begin
	begin
		var a, b : int :=0;
		while a <> b do
			while a <> b do
				if a = b then
					b := 1;
				else
					if a = b then
						b := 1;
					else
						while a <> b do
							if a = b then
								break;
							endif;
						enddo;
					endif;
				endif;
			enddo;
		enddo;
	end;
end; 

/* Be able to use break in a double nested while loop */ 
void function func17()
begin
	begin
		var a, b : int :=0;
		while a <> b do
			while a <> b do
				if a = b then
					b := 1;
				else
					if a = b then
						b := 1;
					else
						while a <> b do
							break;
						enddo;
					endif;
				endif;
			enddo;
		enddo;
	end;
end; 

/* Be able to use break in a double nested while loop */ 
void function func18()
begin
	begin
		var a, b : int :=0;
		if a = b then
			b := 1;
		else
			while a <> b do
				break;
			enddo;
		endif;
	end;
end; 



void main()
begin
	begin
		var x : int := 10;
		x := 2;
	end;
end;